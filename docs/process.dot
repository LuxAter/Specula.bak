digraph G {
    node[shape="box"];
    graph[splines="ortho", nodesep=0.5, rankdir="LR", concentrate=true]
    subgraph cluster_specula {
        label="Specula";
        subgraph cluster_scene {
            style="dashed";
            label="Scene";
            penwidth=3;
            camera[label="Camera"];
            objects[label="Objects"];
            materials[label="Materials"];
        };
        subgraph cluster_image {
            style="dashed";
            label="Image";
            penwidth=3;
            write_img[label="Write"];
            subgraph cluster_image_type {
                style="dotted";
                label="Image Writer";
                write_img_png[label="PNG"];
                write_img_jpg[label="JPG"];
                write_img_bmp[label="BMP"];
                write_img_hdr[label="HDF"];
                write_img_tga[label="TGA"];
            };
            write_img->write_img_bmp;
            write_img->write_img_jpg;
            write_img->write_img_png;
            write_img->write_img_hdr;
            write_img->write_img_tga;
        };
        subgraph cluster_cpu {
            style="dashed";
            label="CPU";
            cpu_ray_intersect[label="Ray Intersect"];
            cpu_ray_march[label="Ray March"];
            cpu_ray_march->cpu_ray_intersect;
        };
        subgraph cluster_gpu {
            style="dashed";
            label="GPU";
            gpu_ray_intersect[label="Ray Intersect"];
            gpu_ray_march[label="Ray March"];
            gpu_ray_march->gpu_ray_intersect;
        };
        settings[label="Settings", style="dashed", penwidth=3];
        render_to_file[label="Render File", penwidth=3];
        render_to_img[label="Render Raw", penwidth=3];

        render_to_file->render_to_img;
        render_to_file->write_img;
        render_to_img->settings[style="dashed"];
        render_to_img->gpu_ray_march[color="red"];
        render_to_img->cpu_ray_march[color="blue"];

        gpu_ray_intersect->objects[style="dashed"];
        cpu_ray_intersect->objects[style="dashed"];
        gpu_ray_march->materials[style="dashed"];
        cpu_ray_march->materials[style="dashed"];
    };

    subgraph cluster_interface {
        style="solid";
        label="Interface";
        subgraph cluster_lua {
            style="dashed";
            label="Lua Interface";
            lua_bindings[label="Bindings"];
            lua_script[label="Script"];
            lua_bindings->lua_script[dir="both"];
        };
        subgraph cluster_interactive {
            style="dashed";
            label="Interactive Interface";
            subgraph cluster_gui {
                style="dotted";
                label="GUI";
                inter_gui[label="GUI"];
                inter_vp[label="Viewer"];
                inter_mat[label="Material Editor"];
                inter_obj[label="Object Editor"];
                inter_settings[label="Settings Editor"];
                inter_camera[label="Camera Editor"];
                inter_gui->inter_mat;
                inter_gui->inter_obj;
                inter_gui->inter_settings;
                inter_gui->inter_camera;
                inter_gui->inter_vp;
            };
            inter_loop[label="Main Loop"];
            inter_glfw[label="Window context"];
            inter_loop->inter_glfw;
            inter_loop->inter_gui[dir="both"];
            // inter_gui->inter_loop;
        };
        main[label="Specula", penwidth=5];
        main->lua_bindings;
        main->lua_script;
        main->inter_loop;
    };
    lua_bindings->settings[color="green"];
    lua_bindings->camera[color="green"];
    lua_bindings->objects[color="green"];
    lua_bindings->materials[color="green"];
    lua_bindings->render_to_file[color="magenta"];
    inter_mat->materials[color="green"];
    inter_obj->objects[color="green"];
    inter_settings->settings[color="green"];
    inter_camera->camera[color="green"];
    inter_loop->render_to_img[color="magenta"];
    inter_loop->render_to_file[color="magenta"];
}